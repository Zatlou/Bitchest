{% extends 'base.html.twig' %}

{% block body %}
<section>
  <h1>Bitchest</h1>
  <!-- CURRENCIES'S EVOLUTION -->
  <h2>Évolution du cours des crypto-monnaies (30 jours)</h2>
  <canvas id="myChart"></canvas>
  <!-- CURRENCIES'S RATES -->
  <h2>Cours des crypto-monnaies</h2>
  <table class="list">
    <tr>
      <th></th>
      <th>Crypto-monnaie</th>
      <th>Cours</th>
      {% if not is_granted('ROLE_ADMIN') %}
      <th class="align-right"></th>
      {% endif %}
    </tr>
    {% for currency in currencies %}
    {% set rate = currency.rates[currency.rates|length - 1] %}
    {% set price = rate.price %}
    <tr>
      <td><img src="{{ currency.thumbnailUrl }}" alt="{{ currency.name }}" title="{{ currency.name }}" /></td>
      <td>{{ currency.name }} ({{ currency.acronym }})</td>
      <td class="bold">
          {{ rate.price }} &euro;&nbsp;
          {% if rate.variation > 0 %}
            {% set sign = '+' %}
            {% set class = 'plus' %}
          {% else %}
            {% set sign = '' %}
            {% set class = 'minus' %}
          {% endif %}
          <span class="sign {{ class }}">{{ sign }}{{ rate.variation|round(2, 'floor') }}% 1D</span>
      </td>
      {% if not is_granted('ROLE_ADMIN') %}
      <td class="align-right">
      {# If the customer has enough money to buy a unit of that currency #}
      {% if app.user.accounts[0].credit < price %}
      Vous n'avez plus d'argent
      {% else %}
      <a class="waves-effect waves-light btn" href="{{ path('currency_order', {'currencyId' : currency.id }) }}" title="Commander">Commander</a>
      {% endif %}
      </td>
      {% endif %}
    </tr>
    {% endfor %}
  </table>
  <!-- CHARTJS -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.min.js"></script>
  <script>
  // Available color lines
  var lines =
  [
      {
        'backgroundColor' : 'rgba(255, 99, 132, 0.2)',
        'borderColor' : 'rgba(255, 99, 132, 1)'
      },
      {
        'backgroundColor' : 'rgba(54, 162, 235, 0.2)',
        'borderColor' : 'rgba(54, 162, 235, 1)'
      },
      {
        'backgroundColor' : 'rgba(255, 206, 86, 0.2)',
        'borderColor' : 'rgba(255, 206, 86, 1)'
      },
      {
        'backgroundColor' : 'rgba(75, 192, 192, 0.2)',
        'borderColor' : 'rgba(75, 192, 192, 1)'
      },
      {
        'backgroundColor' : 'rgba(153, 102, 255, 0.2)',
        'borderColor' : 'rgba(153, 102, 255, 1)'
      },
      {
        'backgroundColor' : 'rgba(255, 159, 64, 0.2)',
        'borderColor' : 'rgba(255, 159, 64, 1)'
      },
      {
        'backgroundColor' : 'rgba(255, 116, 255, 0.2)',
        'borderColor' : 'rgba(255, 116, 255, 1)'
      },
      {
        'backgroundColor' : 'rgba(59, 107, 196, 0.2)',
        'borderColor' : 'rgba(59, 107, 196, 1)'
      },
      {
        'backgroundColor' : 'rgba(0, 33, 55, 0.2)',
        'borderColor' : 'rgba(0, 33, 55, 1)'
      },
      {
        'backgroundColor' : 'rgba(0, 0, 0, 0.2)',
        'borderColor' : 'rgba(0, 0, 0, 1)'
      }
  ]
  var ctx = document.getElementById('myChart').getContext('2d');
  var myChart = new Chart(ctx, {
      type: 'line',
      data: {
          labels:
          [
            // Show last 30 days as references
            {% set date = 'now'|date_modify('-30 days') %}
            {% for i in 1..30 %}
            {% set date = date|date_modify('+1 day') %}
            '{{ date|date('d/m')|lower }}',
            {% endfor %}
          ],
          datasets:
          [
            // Draws curve for each currency
            {% for key, currency in currencies %}
            {
              label: '{{ currency.name }}',
              data: [ // Gets all prices recorded in the last 30 days
                {% for i in 0..currency.rates|length - 1 %}
                  '{{ currency.rates[i].price }}',
                {% endfor %}
              ],
              backgroundColor: [lines[{{ key }}].backgroundColor],
              borderColor: [lines[{{ key }}].borderColor],
              borderWidth: 1
            },
            {% endfor %}
         ]
      },
      options: {
          legend: {
             labels: {
                 fontColor: '#FFFFFF',
                 fontSize: 14
             }
          },
          scales: {
              xAxes: [{
                  ticks: {
                      fontColor: '#FFFFFF',
                      fontSize: 12,
                      beginAtZero:false
                  }
              }],
              yAxes: [{
                  ticks: {
                      fontColor: '#FFFFFF',
                      fontSize: 12,
                      beginAtZero:false,
                      callback: function(value, index, values) {
                        return value + ' €';
                      }
                  }
              }]
          },
          tooltips: {
            callbacks: {
                label: function(tooltipItems, data) {
                    return data.datasets[tooltipItems.datasetIndex].label +': ' + tooltipItems.yLabel + ' €';
                }
            }
         }
      }
  });
  </script>
</section>
{% endblock %}
